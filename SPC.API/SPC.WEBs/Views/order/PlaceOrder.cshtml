@{
    Layout = "~/Views/Shared/_PharmacyNavigation.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Place Order</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            transition: box-shadow 0.3s ease-in-out;
            margin-bottom: 1.5rem;
        }

            .card:hover {
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            }

        .table th {
            background-color: #f8f9fa;
        }

        .form-control:read-only {
            background-color: #f8f9fa;
        }

        .search-results {
            max-height: 400px;
            overflow-y: auto;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container py-4">
        <div class="row mb-4">
            <div class="col">
                <h2 class="display-6 mb-3">Place Order</h2>
                <div class="alert alert-info d-flex align-items-center">
                    <i class="fas fa-store-alt me-2"></i>
                    <div>
                        <strong>Logged in Pharmacy ID:</strong> <span id="displayPharmacyId">@ViewBag.PharmacyId</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Search Section -->
        <div class="card">
            <div class="card-header bg-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-search me-2"></i>Search for a Drug
                </h5>
            </div>
            <div class="card-body">
                <form id="searchForm" class="row g-3 align-items-end">
                    <div class="col-md-10">
                        <label class="form-label">Search Term:</label>
                        <input name="searchTerm" class="form-control" id="searchTerm" required placeholder="Enter drug name or description" />
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-primary w-100" id="submitSearch">
                            <i class="fas fa-search me-2"></i>Search
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Search Results -->
        <div class="card">
            <div class="card-header bg-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-list me-2"></i>Search Results
                </h5>
            </div>
            <div class="card-body p-0">
                <div class="search-results">
                    <div id="drugList"></div>
                </div>
            </div>
        </div>

        <!-- Order Details -->
        <div class="card">
            <div class="card-header bg-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-shopping-cart me-2"></i>Order Details
                </h5>
            </div>
            <div class="card-body">
                <form id="orderForm">
                    <div class="mb-3">
                        <label class="form-label">Pharmacy ID:</label>
                        <input asp-for="PharmacyId" class="form-control" id="PharmacyId" value="@ViewBag.PharmacyId" required readonly />
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover" id="orderItems">
                            <thead>
                                <tr>
                                    <th>Drug ID</th>
                                    <th>Drug Name</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Total</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-success" id="submitOrderBtn">
                            <i class="fas fa-check me-2"></i>Submit Order
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Original JavaScript functions remain exactly the same
        document.getElementById("submitSearch").addEventListener("click", async function () {
            var searchTerm = document.getElementById("searchTerm").value;
            if (!searchTerm) {
                alert("Please enter a search term.");
                return;
            }

            try {
                const response = await fetch("https://localhost:7210/api/inventory/drugs?searchTerm=" + encodeURIComponent(searchTerm), {
                    method: "GET",
                    headers: { "Content-Type": "application/json" }
                });

                if (response.ok) {
                    const drugs = await response.json();
                    let drugListHtml = "<table class='table mb-0'><thead><tr><th>Name</th><th>Description</th><th>Unit Price</th><th>Stock Level</th><th>Action</th></tr></thead><tbody>";

                    drugs.forEach(drug => {
                        drugListHtml += `<tr>
                                <td>${drug.name}</td>
                                <td>${drug.description}</td>
                                <td>LKR.${drug.unitPrice.toFixed(2)}</td>
                                <td>${drug.stockLevel}</td>
                                <td><button type="button" class="btn btn-primary btn-sm addDrugBtn"
                                    data-id="${drug.id}" data-name="${drug.name}" data-price="${drug.unitPrice}" data-stock="${drug.stockLevel}">
                                    <i class="fas fa-plus me-1"></i>Add
                                </button></td>
                            </tr>`;
                    });

                    drugListHtml += "</tbody></table>";
                    document.getElementById("drugList").innerHTML = drugListHtml;

                    document.querySelectorAll(".addDrugBtn").forEach(button => {
                        button.addEventListener("click", function () {
                            addDrugToOrder(this.dataset.id, this.dataset.name, this.dataset.price, this.dataset.stock);
                        });
                    });

                } else {
                    const errorData = await response.json();
                    alert("Error: " + errorData.message);
                }
            } catch (error) {
                alert("An error occurred: " + error.message);
            }
        });

        function addDrugToOrder(drugId, drugName, unitPrice, stockLevel) {
            let tableBody = document.querySelector("#orderItems tbody");
            let rowCount = tableBody.rows.length;

            let newRow = `<tr>
                    <td><input name="Items[${rowCount}].DrugId" class="form-control form-control-sm" value="${drugId}" readonly /></td>
                    <td>${drugName}</td>
                    <td><input name="Items[${rowCount}].Quantity" type="number" class="form-control form-control-sm quantityInput" required min="1" max="${stockLevel}" /></td>
                    <td><input name="Items[${rowCount}].UnitPrice" type="number" step="0.01" class="form-control form-control-sm" value="${unitPrice}" readonly /></td>
                    <td><input name="Items[${rowCount}].Total" type="number" step="0.01" class="form-control form-control-sm totalInput" value="0.00" readonly /></td>
                    <td><button type="button" class="btn btn-danger btn-sm removeItemBtn">
                        <i class="fas fa-trash-alt"></i>
                    </button></td>
                </tr>`;

            tableBody.insertAdjacentHTML("beforeend", newRow);

            document.querySelectorAll(".removeItemBtn").forEach(button => {
                button.addEventListener("click", function () {
                    this.closest("tr").remove();
                });
            });

            document.querySelectorAll(".quantityInput").forEach(input => {
                input.addEventListener("input", function () {
                    let maxStock = parseInt(this.max);
                    if (parseInt(this.value) > maxStock) {
                        alert("Ordered quantity exceeds available stock!");
                        this.value = maxStock;
                    }
                    updateTotalPrice(this);
                });
            });
        }

        function updateTotalPrice(quantityInput) {
            let row = quantityInput.closest("tr");
            let unitPrice = parseFloat(row.querySelector('input[name*="UnitPrice"]').value);
            let quantity = parseInt(quantityInput.value) || 0;
            let totalPriceField = row.querySelector(".totalInput");

            totalPriceField.value = (unitPrice * quantity).toFixed(2);
        }

        document.getElementById("submitOrderBtn").addEventListener("click", async function () {
            var order = {
                PharmacyId: document.getElementById("PharmacyId").value,
                Status: "Pending",
                Items: []
            };

            var rows = document.querySelectorAll("#orderItems tbody tr");
            rows.forEach((row, index) => {
                var drugId = row.querySelector('input[name="Items[' + index + '].DrugId"]').value;
                var quantity = row.querySelector('input[name="Items[' + index + '].Quantity"]').value;
                var unitPrice = row.querySelector('input[name="Items[' + index + '].UnitPrice"]').value;

                if (drugId && quantity && unitPrice) {
                    order.Items.push({
                        DrugId: parseInt(drugId),
                        Quantity: parseInt(quantity),
                        UnitPrice: parseFloat(unitPrice)
                    });
                }
            });

            if (order.Items.length === 0) {
                alert("Please add at least one item to the order.");
                return;
            }

            console.log("Sending order data:", order);

            try {
                const response = await fetch("https://localhost:7210/api/order", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(order)
                });

                if (response.ok) {
                    alert("Order placed successfully!");

                    // Clear order details
                    document.querySelector("#orderItems tbody").innerHTML = "";
                    document.getElementById("searchTerm").value = "";
                    document.getElementById("drugList").innerHTML = "";

                    // Refresh the page after a short delay
                    setTimeout(() => {
                        location.reload();
                    }, 1000); // 1-second delay before refresh

                } else {
                    const errorData = await response.json();
                    alert("Error: " + (errorData.message || "Failed to place order."));
                }
            } catch (error) {
                alert("An error occurred: " + error.message);
            }
        });

    </script>
</body>
</html>