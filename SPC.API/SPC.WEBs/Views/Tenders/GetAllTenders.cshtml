@model List<SPC.Web.Models.Tender>
@{
    Layout = "~/Views/Shared/_StaffNavigation1.cshtml";
}

<div class="container-fluid px-4">
    <div class="card shadow-lg mt-4">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="mb-0">Tender Management</h2>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" id="searchTerm" class="form-control" placeholder="Search tenders..." />
                        <button class="btn btn-primary" id="searchBtn">
                            <i class="fas fa-search"></i> Search
                        </button>
                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Supplier ID</th>
                            <th>Description</th>
                            <th>Status</th>
                            <th>Submitted Date</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="tenderTableBody">
                        @foreach (var tender in Model)
                        {
                            <tr id="tenderRow_@tender.Id">
                                <td>@tender.Id</td>
                                <td>@tender.SupplierId</td>
                                <td>@tender.Description</td>
                                <td id="status_@tender.Id">@tender.Status</td>
                                <td>@tender.SubmittedDate.ToShortDateString()</td>
                                <td class="text-center">
                                    @if (tender.Status == "Pending")
                                    {
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-sm btn-success approveBtn" data-id="@tender.Id">
                                                <i class="fas fa-check"></i> Approve
                                            </button>
                                            <button class="btn btn-sm btn-warning rejectBtn" data-id="@tender.Id">
                                                <i class="fas fa-times"></i> Reject
                                            </button>
                                        </div>
                                    }
                                    <button class="btn btn-sm btn-danger deleteBtn" data-id="@tender.Id">
                                        <i class="fas fa-trash"></i> Done
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Utility function to show alerts
        function showAlert(message, type = "info") {
            const alertContainer = document.createElement('div');
            alertContainer.className = `alert alert-${type} alert-dismissible fade show position-fixed top-0 end-0 m-3 z-3`;
            alertContainer.setAttribute('role', 'alert');

            alertContainer.innerHTML = `
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `;

            document.body.appendChild(alertContainer);

            setTimeout(() => {
                const bsAlert = bootstrap.Alert.getOrCreateInstance(alertContainer);
                bsAlert.close();
            }, 3000);
        }

        document.getElementById("searchBtn").addEventListener("click", async function () {
            let searchTerm = document.getElementById("searchTerm").value;
            window.location.href = "/Tenders/GetAllTenders?searchTerm=" + encodeURIComponent(searchTerm);
        });

        document.querySelectorAll(".approveBtn").forEach(button => {
            button.addEventListener("click", async function () {
                let id = this.getAttribute("data-id");
                if (confirm("Are you sure you want to approve this tender?")) {
                    await handleTenderAction(id, "Approve");
                }
            });
        });

        document.querySelectorAll(".rejectBtn").forEach(button => {
            button.addEventListener("click", async function () {
                let id = this.getAttribute("data-id");
                if (confirm("Are you sure you want to reject this tender?")) {
                    await handleTenderAction(id, "Reject");
                }
            });
        });

        document.querySelectorAll(".deleteBtn").forEach(button => {
            button.addEventListener("click", async function () {
                let id = this.getAttribute("data-id");
                if (confirm("Are you sure you want to delete this tender?")) {
                    await handleTenderAction(id, "Delete");
                }
            });
        });

        async function handleTenderAction(id, action) {
            try {
                let url = `/Tenders/${action}`;
                let response = await fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: `id=${id}`
                });
                const data = await response.json();
                if (data.success) {
                    if (action === "Delete") {
                        document.getElementById(`tenderRow_${id}`).remove();
                        showAlert("Tender marked as done successfully.", "success");
                    } else {
                        document.getElementById(`status_${id}`).innerText = action === "Approve" ? "Approved" : "Rejected";
                        showAlert(`Tender ${action.toLowerCase()}d successfully.`, "success");
                    }
                } else {
                    showAlert(data.message || `Error occurred while performing ${action}.`, "danger");
                }
            } catch (error) {
                showAlert("An error occurred: " + error.message, "danger");
            }
        }
    </script>
}