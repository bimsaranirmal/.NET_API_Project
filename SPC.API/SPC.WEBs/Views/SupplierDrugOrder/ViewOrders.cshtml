@model List<SPC.Web.Models.SupplierDrugOrder>

@{
    Layout = "~/Views/Shared/_SupplierLayout.cshtml";
}

<h2 class="mt-3">@ViewData["Title"]</h2>
<div class="card-header bg-white">
    <h5 class="card-title mb-0">
        <i class="fas fa-file-contract me-2"></i>Order Information
    </h5>
    <div class="alert alert-info mb-4">
        <strong>Logged in Supplier ID:</strong> <span id="supplierId">@ViewBag.SupplierId</span>
    </div>
</div>

<!-- Orders Table -->
<div class="table-responsive">
    <table class="table table-striped table-hover" id="ordersTable">
        <thead class="table-dark">
            <tr>
                <th>Order ID</th>
                <th>Supplier ID</th>
                <th>Drug ID</th>
                <th>Quantity</th>
                <th>Total Price</th>
                <th>Order Date</th>
            </tr>
        </thead>
        <tbody>
            <!-- Orders will be loaded dynamically -->
        </tbody>
    </table>
</div>

<!-- Custom CSS for table styling -->
<style>
    /* Add custom padding to the table cells */
    #ordersTable th, #ordersTable td {
        padding: 10px 15px;
    }

    /* Add hover effect for the table rows */
    #ordersTable tbody tr:hover {
        background-color: #f1f1f1;
    }

    /* Center the error message in the table */
    #ordersTable tbody td {
        text-align: center;
    }

    /* Style the alert box */
    .alert-info {
        font-size: 16px;
        font-weight: bold;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            fetchSupplierOrders();
        });

        function fetchSupplierOrders() {
            const supplierId = document.getElementById("supplierId").innerText;
            fetch(`https://localhost:7210/api/SupplierDrugOrder/supplier/${supplierId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error("No orders found for this supplier.");
                    }
                    return response.json();
                })
                .then(orders => {
                    const tableBody = document.querySelector("#ordersTable tbody");
                    tableBody.innerHTML = "";

                    if (orders.length > 0) {
                        orders.forEach(order => {
                            const row = document.createElement("tr");
                            row.innerHTML = `
                                            <td>${order.orderId}</td>
                                            <td>${order.supplierId}</td>
                                            <td>${order.drugId}</td>
                                            <td>${order.quantity}</td>
                                            <td>${order.totalPrice.toFixed(2)}</td>
                                            <td>${new Date(order.orderDate).toLocaleDateString()}</td>
                                        `;
                            tableBody.appendChild(row);
                        });
                    } else {
                        tableBody.innerHTML = '<tr><td colspan="6" class="text-center text-danger">No orders found.</td></tr>';
                    }
                })
                .catch(error => {
                    console.error("Error fetching orders:", error);
                    document.querySelector("#ordersTable tbody").innerHTML = '<tr><td colspan="6" class="text-center text-danger">No orders found.</td></tr>';
                });
        }
    </script>
}
