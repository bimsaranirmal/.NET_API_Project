@model SPC.Web.Models.Drug

@{
    ViewData["Title"] = "Update Stock";
}

<h2>Update Stock</h2>

<form id="updateStockForm">
    <div class="form-group">
        <label>Drug ID:</label>
        <input asp-for="DrugId" type="number" class="form-control" id="DrugId" required />
    </div>
    <div class="form-group">
        <label>Quantity:</label>
        <input asp-for="Quantity" type="number" class="form-control" id="Quantity" required />
    </div>
    <button type="button" class="btn btn-primary mt-2" id="updateStockBtn">Update Stock</button>
</form>

<script>
    document.getElementById("updateStockBtn").addEventListener("click", async function () {
        var drugId = parseInt(document.getElementById("DrugId").value);
        var quantity = parseInt(document.getElementById("Quantity").value);

        // Check if drugId and quantity are valid
        if (isNaN(drugId) || isNaN(quantity)) {
            alert("Please enter valid drug ID and quantity.");
            return;
        }

        try {
            const response = await fetch(`https://localhost:7210/api/inventory/stock/${drugId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(quantity)
            });

            if (response.ok) {
                const data = await response.json();  // Only use response.json()
                alert(data.message);  // Show message from the response
                window.location.href = "/Home/Index";  // Redirect on success
            } else {
                const errorData = await response.json();
                alert("Error: " + errorData.message);
            }
        } catch (error) {
            alert("An error occurred: " + error.message);
        }
    });



</script>
